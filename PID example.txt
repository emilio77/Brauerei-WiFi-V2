PID controllers can be used for both analog and digital outputs. For analog outputs, the setpoint can be used directly.
With ON/OFF devices like our heaters, you can help yourself with a trick: assume a period duration and use this with the output value to get the percentual calculated switch-on time.
(Also used in factories and industry)
 

Parameter list:
These parameters must be adjustable in the program by means of a field according to their definition. Further descriptions and explanations of the values and placeholders used can be found in the "Parameters" section.

Bezeichnung:	Beschreibung:				Default:	Min:	MAX:		Unit:	Nr. of Dezimal Places
Kp				P Controller				1			0		99999		--		4
Ki				I Controller				1			0		99999		sek		4	
Kd				D Controller				1			0		99999		sek		4
DEADB			Dead band controller		0,5			0		99999		°C		1
Ta				Sampling time				5			1		300			sek		0
Z_H_Period		Period duration				30			1		300			sek		0
Z_H_1_MIN		Minimum switch-on time		5			0		300			sek		0
Z_H_0_MIN		Minimum switch-off time		5			0		300			sek		0


Parameters:
	#	Kp = P Controller 
	#	Ki = I Controller
	#	Kd = D Controller
	#	DEADB = dead band controller (control is suspended within this temperature range as a deviation value from the setpoint)
	#	Ta = Sampling time (measuring interval time of the temperature sensor)
	#	Z_H_PERIOD = Period duration for regulation
	#	Z_H_1_MIN = Minimum switch-on time
	#	Z_H_0_MIN = Minimum switch-off time
	#	e_alt = Previous e
	#	y = output value
	#	T_001 = Current temperature of sensor
	#	T_SP = Temperature setpoint (default value from "Rast-tabelle")
	#	e = Deviation
	#	e_sum = Cumulated value of e (integral of e(dt))
	#	Z_CALC_1 = Calculated switch-on time
	#	Z_CALC_0 = Calculated switch-off time


Merry go round!

S01000 --> Deadband differentiation

	if T_001 <= (T_SP - DEADB):
		goto S01010
	elif T_001 >= (T_SP - DEADB):
		goto S01010
	
	else:
		wait Ta
		e_alt = 0
		e_sum = 0
		goto S01000

S01010 --> Calculate PID

	e = T_SP - T_001
	e_sum = e_sum + e
	y = Kp * e + Ki * Ta * esum + Kd * (e - e_alt)/Ta
	e_alt = e
	if y >= 100:
		y = 100
	elif y <= -100:	(Only available if countercooling is possible. Otherwise y will always be positive. - or simply set to 0)
		y = -100
	
	Display calculated y in %. (0-100 %)
	goto S01020
	

S01020 --> Calculate setpoint for  I/O device

	Z_CALC_1 = Z_H_Period / 100 * y
	Z_CALC_0 = Z_H_Period - Z_CALC_1
		
	if Z_CALC_1 < Z_H_1_MIN:
		Z_CALC_1 = 0
		
	else:
		Z_CALC_1 = Z_CALC_1
	
	if Z_CALC_0 < Z_H_0_MIN:
		Z_CALC_0 = 0
		
	else:
		Z_CALC_0 = Z_CALC_0
	
	Activation of heating for Z_CALC_1
	if Z_CALC_0 == 0
		No deactivation of heating
		goto S01000
	else:
		Deactivation of heating for Z_CALC_0
		goto S01000
	
Merry go round!